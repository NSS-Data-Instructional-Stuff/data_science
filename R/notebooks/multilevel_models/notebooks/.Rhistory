library(lme4)
library(tidyverse)
penguins <- read_csv("../data/fg.csv")
field_goals <- read_csv("../data/fg.csv")
First, let's remember how to build a regular logistic regression model.
field_goals_log_reg <- glm("target ~ distance", data = field_goals, family = "binomial")
summary(field_goals_log_reg)
for (letter in c("a", "b", "c")){
print(letter)
}
print(i)
for i in 5:8{
for (i in 5:8) {
print(i)
}
library(tidyverse)
map(c(-1, 12, 0), abs)
map_dbl(c(-1, 12, 0), abs)
penguins <- read_csv("../data/penguins.csv")
map_int(penguins, n_distinct)
map_int(penguins, \(x) sum(is.na(x)))
map_int(penguins, ~sum(is.na(.)))
square <- function(x){
x^2
}
square(10)
collatz <- function(n){
if (n %% 2 == 0){
n / 2
}
else {
3*n + 1
}
}
collatz(10)
collatz(3)
collatz(13)
n = 13
num_iter = 0
while (n != 1){
n <- collatz(n)
num_iter = num_iter + 1
}
print(glue::glue("{n} required {num_iter} iterations to reach 1."))
starting_value = 13
num_iter = 0
n <- starting_value
while (n != 1){
n <- collatz(n)
num_iter = num_iter + 1
}
print(glue::glue("{n} required {num_iter} iterations to reach 1."))
print(glue::glue("{starting_value} required {num_iter} iterations to reach 1."))
starting_value = 157
num_iter = 0
n <- starting_value
while (n != 1){
n <- collatz(n)
num_iter = num_iter + 1
}
print(glue::glue("{starting_value} required {num_iter} iterations to reach 1."))
starting_value = 100000
num_iter = 0
n <- starting_value
while (n != 1){
n <- collatz(n)
num_iter = num_iter + 1
}
print(glue::glue("{starting_value} required {num_iter} iterations to reach 1."))
starting_value = 123456
num_iter = 0
n <- starting_value
while (n != 1){
n <- collatz(n)
num_iter = num_iter + 1
}
print(glue::glue("{starting_value} required {num_iter} iterations to reach 1."))
starting_value = 9676081
num_iter = 0
n <- starting_value
while (n != 1){
n <- collatz(n)
num_iter = num_iter + 1
}
print(glue::glue("{starting_value} required {num_iter} iterations to reach 1."))
starting_value = 13
num_iter = 0
n <- starting_value
while (n != 1){
n <- collatz(n)
num_iter = num_iter + 1
}
print(glue::glue("{starting_value} required {num_iter} iterations to reach 1."))
find_mean <- function(summary_variable){
penguins |>
summarize(mean(summary_variable, na.rm = TRUE))
}
find_mean(bill_length_mm)
find_mean <- function(summary_variable){
penguins |>
summarize(mean({{ summary_variable }}, na.rm = TRUE))
}
find_mean(bill_length_mm)
find_mean <- function(summary_variable){
penguins |>
summarize(paste0("mean_", summary_variable) = mean({{ summary_variable }}, na.rm = TRUE))
find_mean <- function(summary_variable){
penguins |>
summarize("test" = mean({{ summary_variable }}, na.rm = TRUE))
}
find_mean <- function(summary_variable){
penguins |>
summarize("test" = mean({{ summary_variable }}, na.rm = TRUE))
}
find_mean(bill_length_mm)
penguins |>
summarize(paste("test", "test") = mean({{ summary_variable }}, na.rm = TRUE))
find_mean <- function(summary_variable){
penguins |>
summarize(paste("test", "test") = mean({{ summary_variable }}, na.rm = TRUE))
colname <- paste0("mean_", summary_variable)
find_mean <- function(summary_variable){
colname <- paste0("mean_", summary_variable)
penguins |>
summarize(colname = mean({{ summary_variable }}, na.rm = TRUE))
}
find_mean(bill_length_mm)
find_mean <- function(summary_variable){
colname <- paste0("mean_", {{ summary_variable }})
penguins |>
summarize(colname = mean({{ summary_variable }}, na.rm = TRUE))
}
find_mean(bill_length_mm)
find_mean("bill_length_mm")
find_mean <- function(summary_variable){
colname <- paste0("mean_", {{ summary_variable }})
penguins |>
summarize({{ colname }} = mean({{ summary_variable }}, na.rm = TRUE))
penguins |>
summarize(!!colname := mean({{ summary_variable }}, na.rm = TRUE))
find_mean <- function(summary_variable){
colname <- paste0("mean_", {{ summary_variable }})
penguins |>
summarize(!!colname := mean({{ summary_variable }}, na.rm = TRUE))
}
find_mean(bill_length_mm)
colname <- paste0("mean_", test)
find_mean <- function(summary_variable){
colname <- paste0("mean_", "test")
penguins |>
summarize(!!colname := mean({{ summary_variable }}, na.rm = TRUE))
}
find_mean(bill_length_mm)
colname <- paste0("mean_", !!summary_variable)
find_mean <- function(summary_variable){
colname <- paste0("mean_", !!summary_variable)
penguins |>
summarize(!!colname := mean({{ summary_variable }}, na.rm = TRUE))
}
find_mean(bill_length_mm)
find_mean <- function(summary_variable){
penguins |>
summarize(!!summary_variable := mean({{ summary_variable }}, na.rm = TRUE))
}
find_mean(bill_length_mm)
find_mean <- function(summary_variable){
penguins |>
summarize(summary_variable := mean({{ summary_variable }}, na.rm = TRUE))
}
find_mean(bill_length_mm)
?enquo
find_mean <- function(summary_variable){
penguins |>
summarize("mean_{{ summary_variable }}" := mean({{ summary_variable }}, na.rm = TRUE))
}
find_mean(bill_length_mm)
